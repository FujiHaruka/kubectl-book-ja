texts:
  en: >-
    {% panel style="success", title="Providing Feedback" %}

    **Provide feedback at the [survey](https://www.surveymonkey.com/r/JH35X82)**
  ja: >-
    {% panel style="success", title="翻訳" %}

    このドキュメントは [The Kubectl Book](https://kubectl.docs.kubernetes.io/) の翻訳です。翻訳の GitHub リポジトリは[こちら](https://github.com/FujiHaruka/kubectl-book-ja)。
---
texts:
  en: '{% panel style="info", title="TL;DR" %}'
  ja: __COPY__
---
texts:
  en: Resource Config is stored in one or more git repositories
  ja: リソース構成は一つ以上の git リポジトリに保管される
---
texts:
  en: Directory hierarchy, git branches and git repositories may be used for loose coupling
  ja: 疎結合に保つために、ディレクトリの階層構造、git ブランチ、git リポジトリが使用できる
---
texts:
  en: Resource Config Structure
  ja: リソース構成の構造
---
texts:
  en: The chapters in this section cover how to structure Resource Config using git.
  ja: このセクションの各章では、git を使ってリソース構成を構造化する方法を説明します。
---
texts:
  en: >-
    Users may start with a pure Directory Hierarchy approach, and later include Branches

    and / or Repositories as part of the structure.
  ja: はじめにディレクトリの階層構造を使った単純なアプローチに慣れてから、ブランチやリポジトリを使った構造化を行うこともできます。
---
texts:
  en: Background
  ja: 背景
---
texts:
  en: "Terms:"
  ja: "用語:"
---
texts:
  en: >-
    *Bases:* provide **common or shared Resource Config to be factored out** that can be
      imported into multiple projects.
  ja: >-
    **ベース:** 複数のプロジェクトにインポートできるように**共通部分をくくり出した共有のリソース構成**
---
texts:
  en: >-
    *Overlays and Customizations:* tailor **common or shared Resource Config to be modified** to
      a specific application, environment or purpose.
  ja: >-
    **Overlay とカスタマイズ:** 共有のリソース構成を特定のアプリケーション、環境、目的に合わせて修正すること
---
texts:
  en: Technique
  ja: テクニック
---
texts:
  en: Decouple Changes
  ja: 分離する変更
---
texts:
  en: Used For
  ja: 用途
---
texts:
  en: Workflow
  ja: ワークフロー
---
texts:
  en: "[Directories](structure_directories.md)"
  ja: "[ディレクトリ](structure_directories.md)"
---
texts:
  en: NA
  ja: __COPY__
---
texts:
  en: Foundational structure.
  ja: 基本的な構造
---
texts:
  en: Changes are immediately propagated globally.
  ja: 変更はただちにグローバルに伝播される
---
texts:
  en: "[Branches](structure_branches.md)"
  ja: "[ブランチ](structure_branches.md)"
---
texts:
  en: "*Across Environments*"
  ja: "**環境をまたぐ**"
---
texts:
  en: Promoting changes across Environments.
  ja: 環境をまたぐ変更を促進する
---
texts:
  en: Changes are promoted across linear stages.
  ja: 線形な段階で変更が促進される
---
texts:
  en: "[Repositories](structure_repositories.md)"
  ja: "[リポジトリ](structure_repositories.md)"
---
texts:
  en: "*Across Teams*"
  ja: "**チームをまたぐ**"
---
texts:
  en: Fetching changes across config shared across Teams.
  ja: チームをまたいで共有する構成をまたいで変更を取得
---
texts:
  en: Changes are pulled by consumers (like upgrades).
  ja: 変更は使用者が pull する (アップグレードなど)
---
texts:
  en: "Concepts:"
  ja: "コンセプト:"
---
texts:
  en: Resource Config may be initially structured using only Directory Hierarchy for organization.
  ja: リソース構成を組織化するために、最初はディレクトリの階層構造を使った構造化だけを採用してもかまいません。
---
texts:
  en: Use Bases with Overlays / Customizations for factoring across Directories
  ja: Overlay / カスタマイズするための Base はディレクトリをまたがって抜き出す
---
texts:
  en: Different Deployment environments for the same app may be loosely coupled
  ja: 同じアプリケーションの複数のデプロイ環境を疎結合に作ることができます
---
texts:
  en: Use separate **Branches for separate environments**.
  ja: "**環境を分離するためにブランチを分離**する"
---
texts:
  en: Use Bases with Overlays / Customization for factoring across Branches
  ja: ブランチをまたがって共通部分を抜き出した Base をもとに Overlay / カスタマイズを行う
---
texts:
  en: Different Teams owning sharing Config may be loosely coupled
  ja: 複数のチームが共有の構成を疎結合にに使うことができます
---
texts:
  en: Use separate **Repositories for separate teams**.
  ja: "**チームを分離するためにリポジトリを分離**する"
---
texts:
  en: Use Bases with Overlays / Customization for factoring across Repositories
  ja: リポジトリをまたがった共通部分を抜き出した Base をもとに Overlay /カスタマイズを行う
