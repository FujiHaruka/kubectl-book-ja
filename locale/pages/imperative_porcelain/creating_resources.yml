texts:
  en: >-
    {% panel style="success", title="Providing Feedback" %}

    **Provide feedback at the [survey](https://www.surveymonkey.com/r/JH35X82)**
  ja: >-
    {% panel style="success", title="翻訳" %}

    このドキュメントは [The Kubectl Book](https://kubectl.docs.kubernetes.io/) の翻訳です。翻訳の間違いは [GitHub の翻訳リポジトリ](https://github.com/FujiHaruka/kubectl-book-ja/issues) までお願いします。
---
texts:
  en: '{% panel style="info", title="TL;DR" %}'
  ja: __COPY__
---
texts:
  en: Imperatively Create a Resources
  ja: 命令的にリソースを作成する
---
texts:
  en: Creating Resources
  ja: リソースの作成
---
texts:
  en: Motivation
  ja: 動機
---
texts:
  en: >-
    Create Resources directly from the command line for the purposes of development or debugging.

    Not for production Application Management.
  ja: >-
    開発やデバッグの用途でリソースをコマンドラインから直接作成します。本番環境でのアプリケーション管理には向いていません。
---
texts:
  en: Deployment
  ja: __COPY__
---
texts:
  en: A Deployment can be created with the `create deployment` command.
  ja: Deployment は `create deployment` コマンドで作成できます。
---
texts:
  en: >-
    {% panel style="success", title="Running and Attaching" %}

    It is possible to run a container and immediately attach to it using the `-i -t` flags.  e.g.

    `kubectl run -t -i my-dep --image ubuntu -- bash`
  ja: >-
    {% panel style="success", title="起動とアタッチ" %}

    コンテナを起動した直後にアタッチするには `-i -t` フラグを使用します。例:

    `kubectl run -t -i my-dep --image ubuntu -- bash`
---
texts:
  en: ConfigMap
  ja: __COPY__
---
texts:
  en: Create a configmap based on a file, directory, or specified literal value.
  ja: ファイル、ディレクトリ、特定のリテラル値に基づく ConfigMap を作成します。
---
texts:
  en: A single configmap may package one or more key/value pairs.
  ja: 一つの ConfigMap は一つ以上のキーバリュー値をまとめて持つことができます。
---
texts:
  en: >-
    When creating a configmap based on a file, the key will default to the basename of the file, and the value will default

    to the file content.  If the basename is an invalid key, you may specify an alternate key.
  ja: >-
    ファイルに基づく ConfigMap を作成するとき、キー名はデフォルトでファイルの basename になり、値はデフォルトでファイルの内容になります。basename が不正なキー名である場合、別のキー名を指定することもできます。
---
texts:
  en: >-
    When creating a configmap based on a directory, each file whose basename is a valid key in the directory will be

    packaged into the configmap.  Any directory entries except regular files are ignored (e.g. subdirectories, symlinks,

    devices, pipes, etc).
  ja: >-
    ディレクトリに基づく ConfigMap を作成するとき、ディレクトリ内のファイルの basename がキー名として正当であれば、ConfigMap の中にパッケージにされます。キー名として不正なファイルは虫されます (subdirectories、symlinks、devices、pipes など)。
---
texts:
  en: Secret
  ja: __COPY__
---
texts:
  en: Create a new secret named my-secret with keys for each file in folder bar
  ja: my-secret という名前の Secret を新規作成します。bar フォルダの各ファイルがキーになります。
---
texts:
  en: >-
    {% panel style="success", title="Bootstrapping Config" %}

    Imperative commands can be used to bootstrap config by using `--dry-run -o yaml`.

    `kubectl create secret generic my-secret --from-file=path/to/bar --dry-run -o yaml`
  ja: >-
    {% panel style="success", title="構成のブートストラップ" %}

    命令的なコマンドは `--dry-run -o yaml` を使用することでリソース構成のブートストラップとして使えます。

    `kubectl create secret generic my-secret --from-file=path/to/bar --dry-run -o yaml`
---
texts:
  en: Namespace
  ja: 名前空間
---
texts:
  en: Create a new namespace named my-namespace
  ja: my-namespace という名前の名前空間を新規作成します。
---
texts:
  en: Auth Resources
  ja: Auth リソース
---
texts:
  en: ClusterRole
  ja: __COPY__
---
texts:
  en: Create a ClusterRole named "foo" with API Group specified.
  ja: API Group を指定して "foo" という名前の ClusterRole を作成します。
---
texts:
  en: ClusterRoleBinding
  ja: __COPY__
---
texts:
  en: Create a role binding to give a user cluster admin permissions.
  ja: ユーザーにクラスタの管理者権限を与えることのできる Role を作成します。
---
texts:
  en: >-
    {% panel style="info", title="Required Admin Permissions" %}

    The cluster-admin role maybe required for creating new RBAC bindings.
  ja: >
    {% panel style="info", title="要求された管理者権限" %}

    cluster-admin role は新しい RBAC バインディングを作成するために要求されることがあります。
---
texts:
  en: Role
  ja: __COPY__
---
texts:
  en: Create a Role named "foo" with API Group specified.
  ja: API Group を指定した "foo" という名前の Role を作成します。
---
texts:
  en: RoleBinding
  ja: __COPY__
---
texts:
  en: Create a RoleBinding for user1, user2, and group1 using the admin ClusterRole.
  ja: user1、user2、group1 が管理者用の ClusterRole を使えるようになるために RoleBinding を作成します
---
texts:
  en: ServiceAccount
  ja: __COPY__
---
texts:
  en: Create a new service account named my-service-account
  ja: my-service-account という名前の Service Account を新規作成します。
